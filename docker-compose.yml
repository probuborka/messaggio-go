services:
  zookeeper:
    restart: always
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - 22181:2181

  kafka:
    restart: always
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    healthcheck:
      test: nc -z kafka 9092 || exit -1
      interval: 10s
      retries: 500
      start_period: 30s
      timeout: 10s  

  db:
    restart: always
    image: postgres:15.2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./database.sql:/docker-entrypoint-initdb.d/database.sql
    ports:
      - 5433:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d `cat $$POSTGRES_DB` -U `cat $$POSTGRES_USER`" ]
      interval: 10s
      retries: 500
      start_period: 30s
      timeout: 10s  

  messaggio:
    restart: always
    build: ./
    command: ./messaggio
    ports:
      - 8000:8000
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_healthy
        restart: true
    environment:
      - KAFKA_SERVER=kafka:9092
      - DB_PASSWORD=postgres

  kafka-ui:
    restart: always
    image: provectuslabs/kafka-ui
    ports:
      - 8090:8080
    depends_on:
      - messaggio
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - kafka
      - zookeeper 